实际用户 ID、实际组 ID
有效用户 ID、有效组 ID
设置用户 ID、设置组 ID

一：
1.实际用户ID(uid)和实际用户组ID(gid)：标识我是谁.-------可以用id命令查看
2.有效用户ID(euid)和有效用户组ID(egid):进程用来决定我们对资源的访问权限。-----进程用来决定我们对资源的访问权限(一般情况下，有效用户ID等于实际用户ID，有效用户组ID等于实际用户组ID。当设置-用户-ID（SUID）位设置，则有效用户ID等于文件的所有者的uid，而不是实际用户ID；同样，如果设置了设置-用户组-ID（SGID）位，则有效用户组ID等于文件所有者的gid，而不是实际用户组ID。)


二：st_mode (15-12 位保存文件类型,11-9 位保存执行文件时设置的信息,8-0 位保存文件访问权限)

1.要删除一个文件，你不一定要有这个文件的写权限，但你一定要有这个文件的上级目录的写权限。也就是说，你即使没有一个文件的写权限，但你有这个文件的上级目录的写权限，你也可以把这个文件给删除，而如果没有一个目录的写权限，也就不能在这个目录下创建文件。
 操作：chmod 777 abc   等价于： chmod 1777 abc  
	   chmod +t abc



三：一些常用的宏：
 实际写程序时，可以使用 st_mode & 掩码来得到 st_mode 中特定的部分
 st_mode & 0170000 : 得到文件类型
 st_mode & 0007000 : 得到执行文件时设置信息
 st_mode & 0000777 : 得到权限位
 st_mode & 00100: 判断所有者是否可执行
.........


如果程序这样写，很少有人去查看， 实际上，可以使用 linux 预定义的一些宏来代替这些生硬的数字。这些宏定义在 •••sys/stat.h•••• 头文件中。

#define S_IFMT  00170000
#define S_ISVTX  0001000

#define S_ISLNK(m)  (((m) & S_IFMT) == S_IFLNK)
